// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @unique @default(uuid())
  username   String    @unique
  display    String?
  sessions   Session[]
  password   String?
  thumbnail  String?
  banner     String?
  tags       String?
  email      String?
  home_ids   String? // <id>@<address> (world)
  avatar_ids String? // <id>@<address> (avatar)
  follows    Follow[]
  updated_at DateTime  @default(now()) @updatedAt
  created_at DateTime  @default(now())
}

model Session {
  id         String   @id @unique @default(uuid())
  token      String   @unique
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  updated_at DateTime @default(now()) @updatedAt
  created_at DateTime @default(now())
}

model Integrity {
  id         String   @id @unique @default(uuid())
  token      String   @unique
  user       String // <id>@<address> (user)
  expire_at  DateTime
  updated_at DateTime @default(now()) @updatedAt
  create_at  DateTime @default(now())
}

model Follow {
  id         String   @id @unique @default(uuid())
  from_id    String
  from       User     @relation(fields: [from_id], references: [id])
  to_id      String
  is_out     Boolean // if true, from is internal user, is following other user
  updated_at DateTime @default(now()) @updatedAt
  created_at DateTime @default(now())
}

model World {
  id          String       @id @unique @default(uuid())
  title       String
  description String?
  thumbnail   String?
  capacity    Int
  tags        String?
  owner_ids   String
  updated_at  DateTime     @default(now()) @updatedAt
  created_at  DateTime     @default(now())
  assets      WorldAsset[]
}

model WorldAsset {
  id         String   @id @unique @default(uuid())
  world_id   String
  world      World    @relation(fields: [world_id], references: [id])
  url        String?
  engine     String?
  platform   String?
  version    String
  hash       String?
  size       Int?
  updated_at DateTime @default(now()) @updatedAt
  created_at DateTime @default(now())
}

model Server {
  id         String   @id @unique @default(uuid())
  address    String   @unique
  secure     Boolean
  tags       String?
  challenge  String?
  updated_at DateTime @default(now()) @updatedAt
  created_at DateTime @default(now())
}

model Instance {
  id          String   @id @unique @default(uuid())
  name        String   @unique
  title       String?
  description String?
  capacity    Int
  world_ids   String
  owner_ids   String
  tags        String?
  updated_at  DateTime @default(now()) @updatedAt
  created_at  DateTime @default(now())
}
